terraform_version = "0.15.3"

planned_values = {
	"outputs": {},
	"resources": {
		"aws_eks_cluster.cluster": {
			"address":        "aws_eks_cluster.cluster",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster",
			"values":         {},
		},
		"aws_eks_cluster_auth.cluster": {
			"address":        "aws_eks_cluster_auth.cluster",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster_auth",
			"values":         {},
		},
		"module.eks.aws_autoscaling_group.workers_launch_template[0]": {
			"address":        "module.eks.aws_autoscaling_group.workers_launch_template[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_autoscaling_group",
			"values": {
				"capacity_rebalance":        null,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_configuration":      null,
				"launch_template": [
					{},
				],
				"load_balancers":         null,
				"max_instance_lifetime":  0,
				"max_size":               5,
				"metrics_granularity":    "1Minute",
				"min_elb_capacity":       null,
				"min_size":               1,
				"mixed_instances_policy": [],
				"name_prefix":            "eks19-spot-1",
				"placement_group":        null,
				"protect_from_scale_in":  false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
						"value":               "eks19-spot-1-eks_asg",
					},
					{
						"key": "kubernetes.io/cluster/eks19",
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                 null,
				"target_group_arns":    null,
				"termination_policies": [],
				"timeouts":             null,
				"vpc_zone_identifier": [
					"subnet-02ccd72ff4cfbc5c2",
					"subnet-0c5a777b65503fed4",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
		},
		"module.eks.aws_eks_cluster.this[0]": {
			"address":        "module.eks.aws_eks_cluster.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster",
			"values": {
				"enabled_cluster_log_types": null,
				"encryption_config":         [],
				"kubernetes_network_config": [
					{},
				],
				"name": "eks19",
				"tags": null,
				"timeouts": {
					"create": "30m",
					"delete": "15m",
					"update": null,
				},
				"version": "1.19",
				"vpc_config": [
					{
						"endpoint_private_access": true,
						"endpoint_public_access":  false,
						"public_access_cidrs": [
							"0.0.0.0/0",
						],
						"subnet_ids": [
							"subnet-02ccd72ff4cfbc5c2",
							"subnet-0c5a777b65503fed4",
						],
					},
				],
			},
		},
		"module.eks.aws_iam_instance_profile.workers_launch_template[0]": {
			"address":        "module.eks.aws_iam_instance_profile.workers_launch_template[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_instance_profile",
			"values": {
				"name_prefix": "eks19",
				"path":        "/",
				"tags":        null,
			},
		},
		"module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]": {
			"address":        "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
				"name_prefix": "eks19-elb-sl-role-creation",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
		},
		"module.eks.aws_iam_role.cluster[0]": {
			"address":        "module.eks.aws_iam_role.cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"name_prefix":           "eks19",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
		},
		"module.eks.aws_iam_role.workers[0]": {
			"address":        "module.eks.aws_iam_role.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"name_prefix":           "eks19",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSClusterPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSServicePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values":         {},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKSWorkerNodePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKS_CNI_Policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
			},
		},
		"module.eks.aws_launch_template.workers_launch_template[0]": {
			"address":        "module.eks.aws_launch_template.workers_launch_template[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_launch_template",
			"values": {
				"block_device_mappings": [
					{
						"device_name": "/dev/xvda",
						"ebs": [
							{
								"delete_on_termination": "true",
								"encrypted":             "false",
								"iops":                  0,
								"kms_key_id":            "",
								"snapshot_id":           null,
								"volume_size":           100,
								"volume_type":           "gp2",
							},
						],
						"no_device":    null,
						"virtual_name": null,
					},
				],
				"capacity_reservation_specification": [],
				"cpu_options":                        [],
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"description":                   null,
				"disable_api_termination":       null,
				"ebs_optimized":                 "false",
				"elastic_gpu_specifications":    [],
				"elastic_inference_accelerator": [],
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"hibernation_options": [],
				"iam_instance_profile": [
					{
						"arn": null,
					},
				],
				"image_id":                             "ami-07ce84a9fa14b4c70",
				"instance_initiated_shutdown_behavior": null,
				"instance_market_options":              [],
				"instance_type":                        "t2.nano",
				"kernel_id":                            null,
				"key_name":                             "",
				"license_specification":                [],
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"monitoring": [
					{
						"enabled": true,
					},
				],
				"name_prefix": "eks19-spot-1",
				"network_interfaces": [
					{
						"associate_carrier_ip_address": null,
						"associate_public_ip_address":  "false",
						"delete_on_termination":        "true",
						"description":                  null,
						"device_index":                 null,
						"interface_type":               null,
						"ipv4_address_count":           null,
						"ipv4_addresses":               null,
						"ipv6_address_count":           null,
						"ipv6_addresses":               null,
						"network_interface_id":         null,
						"private_ip_address":           null,
						"subnet_id":                    null,
					},
				],
				"placement":            [],
				"ram_disk_id":          null,
				"security_group_names": null,
				"tag_specifications": [
					{
						"resource_type": "volume",
						"tags": {
							"Name": "eks19-spot-1-eks_asg",
						},
					},
					{
						"resource_type": "instance",
						"tags": {
							"Name": "eks19-spot-1-eks_asg",
						},
					},
				],
				"tags": null,
				"update_default_version": false,
				"vpc_security_group_ids": null,
			},
		},
		"module.eks.aws_security_group.cluster[0]": {
			"address":        "module.eks.aws_security_group.cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "EKS cluster security group.",
				"name_prefix":            "eks19",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "eks19-eks_cluster_sg",
				},
				"tags_all": {
					"Name": "eks19-eks_cluster_sg",
				},
				"timeouts": null,
				"vpc_id":   "vpc-07411ed4bd38a4261",
			},
		},
		"module.eks.aws_security_group.workers[0]": {
			"address":        "module.eks.aws_security_group.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "Security group for all nodes in the cluster.",
				"name_prefix":            "eks19",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "eks19-eks_worker_sg",
					"kubernetes.io/cluster/eks19": "owned",
				},
				"tags_all": {
					"Name": "eks19-eks_worker_sg",
					"kubernetes.io/cluster/eks19": "owned",
				},
				"timeouts": null,
				"vpc_id":   "vpc-07411ed4bd38a4261",
			},
		},
		"module.eks.aws_security_group_rule.cluster_egress_internet[0]": {
			"address":        "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow cluster egress access to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]": {
			"address":        "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_https_worker_ingress",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow pods to communicate with the EKS cluster API.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_egress_internet[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_egress_internet[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow nodes all egress to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_cluster[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow workers pods to receive communication from the cluster control plane.",
				"from_port":        1025,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster_https",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_self[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_self[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow node to communicate with each other.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
		},
		"module.eks.http.wait_for_cluster[0]": {
			"address":        "module.eks.http.wait_for_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "data",
			"module_address": "module.eks",
			"name":           "wait_for_cluster",
			"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
			"tainted":        false,
			"type":           "http",
			"values": {
				"insecure":        null,
				"request_headers": null,
				"timeout":         300,
			},
		},
		"module.eks.kubernetes_config_map.aws_auth[0]": {
			"address":        "module.eks.kubernetes_config_map.aws_auth[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "aws_auth",
			"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
			"tainted":        false,
			"type":           "kubernetes_config_map",
			"values": {
				"binary_data": null,
				"metadata": [
					{
						"annotations":   null,
						"generate_name": null,
						"labels": {
							"app.kubernetes.io/managed-by": "Terraform",
							"terraform.io/module":          "terraform-aws-modules.eks.aws",
						},
						"name":      "aws-auth",
						"namespace": "kube-system",
					},
				],
			},
		},
		"module.eks.local_file.kubeconfig[0]": {
			"address":        "module.eks.local_file.kubeconfig[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "kubeconfig",
			"provider_name":  "registry.terraform.io/hashicorp/local",
			"tainted":        false,
			"type":           "local_file",
			"values": {
				"content_base64":       null,
				"directory_permission": "0755",
				"file_permission":      "0644",
				"filename":             "./kubeconfig_eks19",
				"sensitive_content":    "REDACTED_SENSITIVE",
				"source":               null,
			},
		},
		"random_string.suffix": {
			"address":        "random_string.suffix",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "suffix",
			"provider_name":  "registry.terraform.io/hashicorp/random",
			"tainted":        false,
			"type":           "random_string",
			"values": {
				"keepers":          null,
				"length":           8,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
		},
	},
}

variables = {
	"region": {
		"name":  "region",
		"value": "eu-west-1",
	},
}

resource_changes = {
	"data.aws_eks_cluster.cluster": {
		"address": "data.aws_eks_cluster.cluster",
		"change": {
			"actions": [
				"read",
			],
			"after": {},
			"after_unknown": {
				"arn": true,
				"certificate_authority":     true,
				"created_at":                true,
				"enabled_cluster_log_types": true,
				"endpoint":                  true,
				"id":                        true,
				"identity":                  true,
				"kubernetes_network_config": true,
				"name":             true,
				"platform_version": true,
				"role_arn":         true,
				"status":           true,
				"tags":             true,
				"version":          true,
				"vpc_config":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster",
	},
	"data.aws_eks_cluster_auth.cluster": {
		"address": "data.aws_eks_cluster_auth.cluster",
		"change": {
			"actions": [
				"read",
			],
			"after": {},
			"after_unknown": {
				"id":    true,
				"name":  true,
				"token": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster_auth",
	},
	"module.eks.aws_autoscaling_group.workers_launch_template[0]": {
		"address": "module.eks.aws_autoscaling_group.workers_launch_template[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"capacity_rebalance":        null,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_configuration":      null,
				"launch_template": [
					{},
				],
				"load_balancers":         null,
				"max_instance_lifetime":  0,
				"max_size":               5,
				"metrics_granularity":    "1Minute",
				"min_elb_capacity":       null,
				"min_size":               1,
				"mixed_instances_policy": [],
				"name_prefix":            "eks19-spot-1",
				"placement_group":        null,
				"protect_from_scale_in":  false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
						"value":               "eks19-spot-1-eks_asg",
					},
					{
						"key": "kubernetes.io/cluster/eks19",
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                 null,
				"target_group_arns":    null,
				"termination_policies": [],
				"timeouts":             null,
				"vpc_zone_identifier": [
					"subnet-02ccd72ff4cfbc5c2",
					"subnet-0c5a777b65503fed4",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
			"after_unknown": {
				"arn":                true,
				"availability_zones": true,
				"default_cooldown":   true,
				"health_check_type":  true,
				"id":                 true,
				"initial_lifecycle_hook": [],
				"instance_refresh":       [],
				"launch_template": [
					{
						"id":      true,
						"name":    true,
						"version": true,
					},
				],
				"mixed_instances_policy": [],
				"name": true,
				"service_linked_role_arn": true,
				"suspended_processes": [
					false,
				],
				"tag": [
					{},
					{},
				],
				"termination_policies": [],
				"vpc_zone_identifier": [
					false,
					false,
				],
				"warm_pool": [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_launch_template",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_autoscaling_group",
	},
	"module.eks.aws_eks_cluster.this[0]": {
		"address": "module.eks.aws_eks_cluster.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"enabled_cluster_log_types": null,
				"encryption_config":         [],
				"kubernetes_network_config": [
					{},
				],
				"name": "eks19",
				"tags": null,
				"timeouts": {
					"create": "30m",
					"delete": "15m",
					"update": null,
				},
				"version": "1.19",
				"vpc_config": [
					{
						"endpoint_private_access": true,
						"endpoint_public_access":  false,
						"public_access_cidrs": [
							"0.0.0.0/0",
						],
						"subnet_ids": [
							"subnet-02ccd72ff4cfbc5c2",
							"subnet-0c5a777b65503fed4",
						],
					},
				],
			},
			"after_unknown": {
				"arn": true,
				"certificate_authority": true,
				"created_at":            true,
				"encryption_config":     [],
				"endpoint":              true,
				"id":                    true,
				"identity":              true,
				"kubernetes_network_config": [
					{
						"service_ipv4_cidr": true,
					},
				],
				"platform_version": true,
				"role_arn":         true,
				"status":           true,
				"tags_all":         true,
				"timeouts":         {},
				"vpc_config": [
					{
						"cluster_security_group_id": true,
						"public_access_cidrs": [
							false,
						],
						"security_group_ids": true,
						"subnet_ids": [
							false,
							false,
						],
						"vpc_id": true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster",
	},
	"module.eks.aws_iam_instance_profile.workers_launch_template[0]": {
		"address": "module.eks.aws_iam_instance_profile.workers_launch_template[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"name_prefix": "eks19",
				"path":        "/",
				"tags":        null,
			},
			"after_unknown": {
				"arn":         true,
				"create_date": true,
				"id":          true,
				"name":        true,
				"role":        true,
				"tags_all":    true,
				"unique_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_launch_template",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_instance_profile",
	},
	"module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]": {
		"address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
				"name_prefix": "eks19-elb-sl-role-creation",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
			"after_unknown": {
				"arn":       true,
				"id":        true,
				"name":      true,
				"policy_id": true,
				"tags_all":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_elb_sl_role_creation",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.eks.aws_iam_role.cluster[0]": {
		"address": "module.eks.aws_iam_role.cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"name_prefix":           "eks19",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"tags_all":            true,
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.eks.aws_iam_role.workers[0]": {
		"address": "module.eks.aws_iam_role.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"name_prefix":           "eks19",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"tags_all":            true,
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSClusterPolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSServicePolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {},
			"after_unknown": {
				"id":         true,
				"policy_arn": true,
				"role":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_elb_sl_role_creation",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEKSWorkerNodePolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEKS_CNI_Policy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_launch_template.workers_launch_template[0]": {
		"address": "module.eks.aws_launch_template.workers_launch_template[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"block_device_mappings": [
					{
						"device_name": "/dev/xvda",
						"ebs": [
							{
								"delete_on_termination": "true",
								"encrypted":             "false",
								"iops":                  0,
								"kms_key_id":            "",
								"snapshot_id":           null,
								"volume_size":           100,
								"volume_type":           "gp2",
							},
						],
						"no_device":    null,
						"virtual_name": null,
					},
				],
				"capacity_reservation_specification": [],
				"cpu_options":                        [],
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"description":                   null,
				"disable_api_termination":       null,
				"ebs_optimized":                 "false",
				"elastic_gpu_specifications":    [],
				"elastic_inference_accelerator": [],
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"hibernation_options": [],
				"iam_instance_profile": [
					{
						"arn": null,
					},
				],
				"image_id":                             "ami-07ce84a9fa14b4c70",
				"instance_initiated_shutdown_behavior": null,
				"instance_market_options":              [],
				"instance_type":                        "t2.nano",
				"kernel_id":                            null,
				"key_name":                             "",
				"license_specification":                [],
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"monitoring": [
					{
						"enabled": true,
					},
				],
				"name_prefix": "eks19-spot-1",
				"network_interfaces": [
					{
						"associate_carrier_ip_address": null,
						"associate_public_ip_address":  "false",
						"delete_on_termination":        "true",
						"description":                  null,
						"device_index":                 null,
						"interface_type":               null,
						"ipv4_address_count":           null,
						"ipv4_addresses":               null,
						"ipv6_address_count":           null,
						"ipv6_addresses":               null,
						"network_interface_id":         null,
						"private_ip_address":           null,
						"subnet_id":                    null,
					},
				],
				"placement":            [],
				"ram_disk_id":          null,
				"security_group_names": null,
				"tag_specifications": [
					{
						"resource_type": "volume",
						"tags": {
							"Name": "eks19-spot-1-eks_asg",
						},
					},
					{
						"resource_type": "instance",
						"tags": {
							"Name": "eks19-spot-1-eks_asg",
						},
					},
				],
				"tags": null,
				"update_default_version": false,
				"vpc_security_group_ids": null,
			},
			"after_unknown": {
				"arn": true,
				"block_device_mappings": [
					{
						"ebs": [
							{
								"throughput": true,
							},
						],
					},
				],
				"capacity_reservation_specification": [],
				"cpu_options":                        [],
				"credit_specification": [
					{},
				],
				"default_version":               true,
				"elastic_gpu_specifications":    [],
				"elastic_inference_accelerator": [],
				"enclave_options": [
					{},
				],
				"hibernation_options": [],
				"iam_instance_profile": [
					{
						"name": true,
					},
				],
				"id": true,
				"instance_market_options": [],
				"latest_version":          true,
				"license_specification":   [],
				"metadata_options": [
					{
						"http_put_response_hop_limit": true,
					},
				],
				"monitoring": [
					{},
				],
				"name": true,
				"network_interfaces": [
					{
						"security_groups": true,
					},
				],
				"placement": [],
				"tag_specifications": [
					{
						"tags": {},
					},
					{
						"tags": {},
					},
				],
				"tags_all":  true,
				"user_data": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_launch_template",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_launch_template",
	},
	"module.eks.aws_security_group.cluster[0]": {
		"address": "module.eks.aws_security_group.cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "EKS cluster security group.",
				"name_prefix":            "eks19",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "eks19-eks_cluster_sg",
				},
				"tags_all": {
					"Name": "eks19-eks_cluster_sg",
				},
				"timeouts": null,
				"vpc_id":   "vpc-07411ed4bd38a4261",
			},
			"after_unknown": {
				"arn":      true,
				"egress":   true,
				"id":       true,
				"ingress":  true,
				"name":     true,
				"owner_id": true,
				"tags":     {},
				"tags_all": {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.eks.aws_security_group.workers[0]": {
		"address": "module.eks.aws_security_group.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "Security group for all nodes in the cluster.",
				"name_prefix":            "eks19",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "eks19-eks_worker_sg",
					"kubernetes.io/cluster/eks19": "owned",
				},
				"tags_all": {
					"Name": "eks19-eks_worker_sg",
					"kubernetes.io/cluster/eks19": "owned",
				},
				"timeouts": null,
				"vpc_id":   "vpc-07411ed4bd38a4261",
			},
			"after_unknown": {
				"arn":      true,
				"egress":   true,
				"id":       true,
				"ingress":  true,
				"name":     true,
				"owner_id": true,
				"tags":     {},
				"tags_all": {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.eks.aws_security_group_rule.cluster_egress_internet[0]": {
		"address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow cluster egress access to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_egress_internet",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]": {
		"address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow pods to communicate with the EKS cluster API.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_https_worker_ingress",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_egress_internet[0]": {
		"address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow nodes all egress to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_egress_internet",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_cluster[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow workers pods to receive communication from the cluster control plane.",
				"from_port":        1025,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_cluster_https",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_self[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow node to communicate with each other.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.data.http.wait_for_cluster[0]": {
		"address": "module.eks.data.http.wait_for_cluster[0]",
		"change": {
			"actions": [
				"read",
			],
			"after": {
				"insecure":        null,
				"request_headers": null,
				"timeout":         300,
			},
			"after_unknown": {
				"body":             true,
				"ca_certificate":   true,
				"id":               true,
				"response_headers": true,
				"url":              true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "data",
		"module_address": "module.eks",
		"name":           "wait_for_cluster",
		"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
		"type":           "http",
	},
	"module.eks.kubernetes_config_map.aws_auth[0]": {
		"address": "module.eks.kubernetes_config_map.aws_auth[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"binary_data": null,
				"metadata": [
					{
						"annotations":   null,
						"generate_name": null,
						"labels": {
							"app.kubernetes.io/managed-by": "Terraform",
							"terraform.io/module":          "terraform-aws-modules.eks.aws",
						},
						"name":      "aws-auth",
						"namespace": "kube-system",
					},
				],
			},
			"after_unknown": {
				"data": true,
				"id":   true,
				"metadata": [
					{
						"generation":       true,
						"labels":           {},
						"resource_version": true,
						"self_link":        true,
						"uid":              true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "aws_auth",
		"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
		"type":           "kubernetes_config_map",
	},
	"module.eks.local_file.kubeconfig[0]": {
		"address": "module.eks.local_file.kubeconfig[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"content_base64":       null,
				"directory_permission": "0755",
				"file_permission":      "0644",
				"filename":             "./kubeconfig_eks19",
				"sensitive_content":    "REDACTED_SENSITIVE",
				"source":               null,
			},
			"after_unknown": {
				"content": true,
				"id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "kubeconfig",
		"provider_name":  "registry.terraform.io/hashicorp/local",
		"type":           "local_file",
	},
	"random_string.suffix": {
		"address": "random_string.suffix",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"keepers":          null,
				"length":           8,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
			"after_unknown": {
				"id":     true,
				"result": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "suffix",
		"provider_name":  "registry.terraform.io/hashicorp/random",
		"type":           "random_string",
	},
}

output_changes = {}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"region": {
						"references": [
							"var.region",
						],
					},
				},
				"name": "aws",
			},
			"kubernetes": {
				"expressions": {
					"cluster_ca_certificate": {
						"references": [
							"data.aws_eks_cluster.cluster",
						],
					},
					"host": {
						"references": [
							"data.aws_eks_cluster.cluster",
						],
					},
					"token": {
						"references": [
							"data.aws_eks_cluster_auth.cluster",
						],
					},
				},
				"name": "kubernetes",
			},
			"module.eks.module.fargate:aws": {
				"module_address":     "module.eks.module.fargate",
				"name":               "aws",
				"version_constraint": ">= 3.22.0",
			},
			"module.eks.module.node_groups:aws": {
				"module_address":     "module.eks.module.node_groups",
				"name":               "aws",
				"version_constraint": ">= 3.22.0",
			},
			"module.eks.module.node_groups:random": {
				"module_address":     "module.eks.module.node_groups",
				"name":               "random",
				"version_constraint": ">= 2.1.0",
			},
			"module.eks:aws": {
				"module_address":     "module.eks",
				"name":               "aws",
				"version_constraint": ">= 3.37.0",
			},
			"module.eks:http": {
				"module_address":     "module.eks",
				"name":               "http",
				"version_constraint": ">= 2.4.0",
			},
			"module.eks:kubernetes": {
				"module_address":     "module.eks",
				"name":               "kubernetes",
				"version_constraint": ">= 1.11.1",
			},
			"module.eks:local": {
				"module_address":     "module.eks",
				"name":               "local",
				"version_constraint": ">= 1.4.0",
			},
			"module.eks:random": {
				"module_address":     "module.eks",
				"name":               "random",
				"version_constraint": ">= 2.1.0",
			},
		},
		"root_module": {
			"module_calls": {
				"eks": {
					"expressions": {
						"cluster_endpoint_private_access": {
							"constant_value": true,
						},
						"cluster_endpoint_private_access_cidrs": {
							"constant_value": [
								"10.0.0.0/16",
							],
						},
						"cluster_endpoint_public_access": {
							"constant_value": false,
						},
						"cluster_name": {
							"references": [
								"local.cluster_name",
							],
						},
						"cluster_version": {
							"constant_value": "1.19",
						},
						"subnets": {
							"references": [
								"data.terraform_remote_state.core-services",
							],
						},
						"vpc_id": {
							"references": [
								"data.terraform_remote_state.core-services",
							],
						},
						"worker_groups_launch_template": {
							"constant_value": [
								{
									"asg_max_size":       5,
									"instance_type":      "t2.nano",
									"kubelet_extra_args": "--node-labels=node.kubernetes.io/lifecycle=spot",
									"name":               "spot-1",
									"spot_price":         "0.199",
									"suspended_processes": [
										"AZRebalance",
									],
								},
							],
						},
					},
					"module": {
						"module_calls": {
							"fargate": {
								"expressions": {
									"cluster_name": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
									"create_eks": {
										"references": [
											"var.create_eks",
										],
									},
									"create_fargate_pod_execution_role": {
										"references": [
											"var.create_fargate_pod_execution_role",
										],
									},
									"eks_depends_on": {
										"references": [
											"aws_eks_cluster.this",
											"kubernetes_config_map.aws_auth",
										],
									},
									"fargate_pod_execution_role_name": {
										"references": [
											"var.fargate_pod_execution_role_name",
										],
									},
									"fargate_profiles": {
										"references": [
											"var.fargate_profiles",
										],
									},
									"iam_path": {
										"references": [
											"var.iam_path",
										],
									},
									"iam_policy_arn_prefix": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"subnets": {
										"references": [
											"var.subnets",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"module": {
									"outputs": {
										"aws_auth_roles": {
											"description": "Roles for use in aws-auth ConfigMap",
											"expression": {
												"references": [
													"local.pod_execution_role_arn",
													"local.create_eks",
												],
											},
										},
										"fargate_profile_arns": {
											"description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles.",
											"expression": {
												"references": [
													"aws_eks_fargate_profile.this",
												],
											},
										},
										"fargate_profile_ids": {
											"description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:).",
											"expression": {
												"references": [
													"aws_eks_fargate_profile.this",
												],
											},
										},
										"iam_role_arn": {
											"description": "IAM role ARN for EKS Fargate pods",
											"expression": {
												"references": [
													"local.pod_execution_role_arn",
												],
											},
										},
										"iam_role_name": {
											"description": "IAM role name for EKS Fargate pods",
											"expression": {
												"references": [
													"local.pod_execution_role_name",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_eks_fargate_profile.this",
											"depends_on": [
												"var.eks_depends_on",
											],
											"expressions": {
												"cluster_name": {
													"references": [
														"var.cluster_name",
													],
												},
												"fargate_profile_name": {
													"references": [
														"each.value",
														"var.cluster_name",
														"each.key",
													],
												},
												"pod_execution_role_arn": {
													"references": [
														"local.pod_execution_role_arn",
													],
												},
												"selector": [
													{
														"labels": {
															"references": [
																"each.value",
															],
														},
														"namespace": {
															"references": [
																"each.value",
															],
														},
													},
												],
												"subnet_ids": {
													"references": [
														"each.value",
														"var.subnets",
													],
												},
												"tags": {
													"references": [
														"each.value",
													],
												},
											},
											"for_each_expression": {
												"references": [
													"local.create_eks",
													"local.fargate_profiles_expanded",
												],
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_eks_fargate_profile",
										},
										{
											"address": "aws_iam_role.eks_fargate_pod",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"assume_role_policy": {
													"references": [
														"data.aws_iam_policy_document.eks_fargate_pod_assume_role[0]",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"path": {
													"references": [
														"var.iam_path",
													],
												},
												"permissions_boundary": {
													"references": [
														"var.permissions_boundary",
													],
												},
												"tags": {
													"references": [
														"var.tags",
													],
												},
											},
											"mode":                "managed",
											"name":                "eks_fargate_pod",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
										{
											"address": "aws_iam_role_policy_attachment.eks_fargate_pod",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"policy_arn": {
													"references": [
														"var.iam_policy_arn_prefix",
													],
												},
												"role": {
													"references": [
														"aws_iam_role.eks_fargate_pod[0]",
													],
												},
											},
											"mode":                "managed",
											"name":                "eks_fargate_pod",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role_policy_attachment",
										},
										{
											"address": "data.aws_iam_policy_document.eks_fargate_pod_assume_role",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"statement": [
													{
														"actions": {
															"constant_value": [
																"sts:AssumeRole",
															],
														},
														"effect": {
															"constant_value": "Allow",
														},
														"principals": [
															{
																"identifiers": {
																	"constant_value": [
																		"eks-fargate-pods.amazonaws.com",
																	],
																},
																"type": {
																	"constant_value": "Service",
																},
															},
														],
													},
												],
											},
											"mode":                "data",
											"name":                "eks_fargate_pod_assume_role",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_policy_document",
										},
										{
											"address": "data.aws_iam_role.custom_fargate_iam_role",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"name": {
													"references": [
														"var.fargate_pod_execution_role_name",
													],
												},
											},
											"mode":                "data",
											"name":                "custom_fargate_iam_role",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
									],
									"variables": {
										"cluster_name": {
											"description": "Name of the EKS cluster.",
										},
										"create_eks": {
											"default":     true,
											"description": "Controls if EKS resources should be created (it affects almost all resources)",
										},
										"create_fargate_pod_execution_role": {
											"default":     true,
											"description": "Controls if the the IAM Role that provides permissions for the EKS Fargate Profile should be created.",
										},
										"eks_depends_on": {
											"description": "List of references to other resources this submodule depends on.",
										},
										"fargate_pod_execution_role_name": {
											"description": "The IAM Role that provides permissions for the EKS Fargate Profile.",
										},
										"fargate_profiles": {
											"default":     {},
											"description": "Fargate profiles to create. See `fargate_profile` keys section in README.md for more details",
										},
										"iam_path": {
											"default":     "/",
											"description": "IAM roles will be created on this path.",
										},
										"iam_policy_arn_prefix": {
											"description": "IAM policy prefix with the correct AWS partition.",
										},
										"permissions_boundary": {
											"description": "If provided, all IAM roles will be created with this permissions boundary attached.",
										},
										"subnets": {
											"default":     [],
											"description": "A list of subnets for the EKS Fargate profiles.",
										},
										"tags": {
											"default":     {},
											"description": "A map of tags to add to all resources.",
										},
									},
								},
								"source": "./modules/fargate",
							},
							"node_groups": {
								"expressions": {
									"cluster_name": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
									"create_eks": {
										"references": [
											"var.create_eks",
										],
									},
									"default_iam_role_arn": {
										"references": [
											"aws_iam_role.workers",
										],
									},
									"ng_depends_on": {
										"references": [
											"aws_eks_cluster.this",
											"kubernetes_config_map.aws_auth",
											"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
											"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
											"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
										],
									},
									"node_groups": {
										"references": [
											"var.node_groups",
										],
									},
									"node_groups_defaults": {
										"references": [
											"var.node_groups_defaults",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"worker_additional_security_group_ids": {
										"references": [
											"var.worker_additional_security_group_ids",
										],
									},
									"worker_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"workers_group_defaults": {
										"references": [
											"local.workers_group_defaults",
										],
									},
								},
								"module": {
									"outputs": {
										"aws_auth_roles": {
											"description": "Roles for use in aws-auth ConfigMap",
											"expression": {
												"references": [
													"local.node_groups_expanded",
													"var.default_iam_role_arn",
												],
											},
										},
										"node_groups": {
											"description": "Outputs from EKS node groups. Map of maps, keyed by `var.node_groups` keys. See `aws_eks_node_group` Terraform documentation for values",
											"expression": {
												"references": [
													"aws_eks_node_group.workers",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_eks_node_group.workers",
											"depends_on": [
												"var.ng_depends_on",
											],
											"expressions": {
												"ami_type": {
													"references": [
														"each.value",
													],
												},
												"capacity_type": {
													"references": [
														"each.value",
													],
												},
												"cluster_name": {
													"references": [
														"var.cluster_name",
													],
												},
												"disk_size": {
													"references": [
														"each.value",
														"each.value",
														"each.value",
													],
												},
												"instance_types": {
													"references": [
														"each.value",
														"each.value",
													],
												},
												"labels": {
													"references": [
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"node_group_name": {
													"references": [
														"each.value",
														"var.cluster_name",
														"each.key",
														"random_pet.node_groups",
														"each.key",
													],
												},
												"node_role_arn": {
													"references": [
														"each.value",
													],
												},
												"release_version": {
													"references": [
														"each.value",
													],
												},
												"scaling_config": [
													{
														"desired_size": {
															"references": [
																"each.value",
															],
														},
														"max_size": {
															"references": [
																"each.value",
															],
														},
														"min_size": {
															"references": [
																"each.value",
															],
														},
													},
												],
												"subnet_ids": {
													"references": [
														"each.value",
													],
												},
												"tags": {
													"references": [
														"var.tags",
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"version": {
													"references": [
														"each.value",
													],
												},
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "managed",
											"name":                "workers",
											"provider_config_key": "node_groups:aws",
											"schema_version":      0,
											"type":                "aws_eks_node_group",
										},
										{
											"address": "aws_launch_template.workers",
											"expressions": {
												"block_device_mappings": [
													{
														"device_name": {
															"constant_value": "/dev/xvda",
														},
														"ebs": [
															{
																"delete_on_termination": {
																	"constant_value": true,
																},
																"volume_size": {
																	"references": [
																		"each.value",
																	],
																},
																"volume_type": {
																	"references": [
																		"each.value",
																	],
																},
															},
														],
													},
												],
												"description": {
													"references": [
														"each.value",
														"var.cluster_name",
														"each.key",
														"random_pet.node_groups",
														"each.key",
													],
												},
												"instance_type": {
													"references": [
														"each.value",
														"each.value",
													],
												},
												"key_name": {
													"references": [
														"each.value",
													],
												},
												"monitoring": [
													{
														"enabled": {
															"references": [
																"each.value",
															],
														},
													},
												],
												"name_prefix": {
													"references": [
														"each.value",
														"var.cluster_name",
														"each.key",
														"random_pet.node_groups",
														"each.key",
													],
												},
												"network_interfaces": [
													{
														"associate_public_ip_address": {
															"references": [
																"each.value",
															],
														},
														"delete_on_termination": {
															"references": [
																"each.value",
															],
														},
														"security_groups": {
															"references": [
																"var.worker_security_group_id",
																"var.worker_additional_security_group_ids",
																"each.value",
															],
														},
													},
												],
												"tag_specifications": [
													{
														"resource_type": {
															"constant_value": "instance",
														},
														"tags": {
															"references": [
																"var.tags",
																"var.node_groups_defaults",
																"var.node_groups",
																"each.key",
																"each.value",
																"var.cluster_name",
																"each.key",
																"random_pet.node_groups",
																"each.key",
															],
														},
													},
													{
														"resource_type": {
															"constant_value": "volume",
														},
														"tags": {
															"references": [
																"var.tags",
																"var.node_groups_defaults",
																"var.node_groups",
																"each.key",
																"each.value",
																"var.cluster_name",
																"each.key",
																"random_pet.node_groups",
																"each.key",
															],
														},
													},
												],
												"tags": {
													"references": [
														"var.tags",
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"update_default_version": {
													"constant_value": true,
												},
												"user_data": {
													"references": [
														"data.cloudinit_config.workers_userdata",
														"each.key",
													],
												},
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "managed",
											"name":                "workers",
											"provider_config_key": "node_groups:aws",
											"schema_version":      0,
											"type":                "aws_launch_template",
										},
										{
											"address": "random_pet.node_groups",
											"depends_on": [
												"var.ng_depends_on",
											],
											"expressions": {
												"keepers": {
													"references": [
														"each.value",
														"each.value",
														"each.value",
														"each.value",
														"each.value",
														"each.value",
														"each.value",
														"each.value",
														"var.cluster_name",
														"each.key",
														"each.value",
													],
												},
												"length": {
													"constant_value": 2,
												},
												"separator": {
													"constant_value": "-",
												},
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "managed",
											"name":                "node_groups",
											"provider_config_key": "node_groups:random",
											"schema_version":      0,
											"type":                "random_pet",
										},
										{
											"address": "data.cloudinit_config.workers_userdata",
											"expressions": {
												"base64_encode": {
													"constant_value": true,
												},
												"boundary": {
													"constant_value": "//",
												},
												"gzip": {
													"constant_value": false,
												},
												"part": [
													{
														"content": {
															"references": [
																"path.module",
																"each.value",
																"each.value",
															],
														},
														"content_type": {
															"constant_value": "text/x-shellscript",
														},
													},
												],
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "data",
											"name":                "workers_userdata",
											"provider_config_key": "node_groups:cloudinit",
											"schema_version":      0,
											"type":                "cloudinit_config",
										},
									],
									"variables": {
										"cluster_name": {
											"description": "Name of parent cluster",
										},
										"create_eks": {
											"default":     true,
											"description": "Controls if EKS resources should be created (it affects almost all resources)",
										},
										"default_iam_role_arn": {
											"description": "ARN of the default IAM worker role to use if one is not specified in `var.node_groups` or `var.node_groups_defaults`",
										},
										"ng_depends_on": {
											"description": "List of references to other resources this submodule depends on",
										},
										"node_groups": {
											"default":     {},
											"description": "Map of maps of `eks_node_groups` to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details",
										},
										"node_groups_defaults": {
											"description": "map of maps of node groups to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details",
										},
										"tags": {
											"description": "A map of tags to add to all resources",
										},
										"worker_additional_security_group_ids": {
											"default":     [],
											"description": "A list of additional security group ids to attach to worker instances",
										},
										"worker_security_group_id": {
											"default":     "",
											"description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster.",
										},
										"workers_group_defaults": {
											"description": "Workers group defaults from parent",
										},
									},
								},
								"source": "./modules/node_groups",
							},
						},
						"outputs": {
							"cloudwatch_log_group_arn": {
								"description": "Arn of cloudwatch log group created",
								"expression": {
									"references": [
										"aws_cloudwatch_log_group.this",
									],
								},
							},
							"cloudwatch_log_group_name": {
								"description": "Name of cloudwatch log group created",
								"expression": {
									"references": [
										"aws_cloudwatch_log_group.this",
									],
								},
							},
							"cluster_arn": {
								"description": "The Amazon Resource Name (ARN) of the cluster.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"cluster_certificate_authority_data": {
								"description": "Nested attribute containing certificate-authority-data for your cluster. This is the base64 encoded certificate data required to communicate with your cluster.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"cluster_endpoint": {
								"description": "The endpoint for your EKS Kubernetes API.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"cluster_iam_role_arn": {
								"description": "IAM role ARN of the EKS cluster.",
								"expression": {
									"references": [
										"local.cluster_iam_role_arn",
									],
								},
							},
							"cluster_iam_role_name": {
								"description": "IAM role name of the EKS cluster.",
								"expression": {
									"references": [
										"local.cluster_iam_role_name",
									],
								},
							},
							"cluster_id": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"cluster_oidc_issuer_url": {
								"description": "The URL on the EKS cluster OIDC Issuer",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"cluster_primary_security_group_id": {
								"description": "The cluster primary security group ID created by the EKS cluster on 1.14 or later. Referred to as 'Cluster security group' in the EKS console.",
								"expression": {
									"references": [
										"local.cluster_primary_security_group_id",
									],
								},
							},
							"cluster_security_group_id": {
								"description": "Security group ID attached to the EKS cluster. On 1.14 or later, this is the 'Additional security groups' in the EKS console.",
								"expression": {
									"references": [
										"local.cluster_security_group_id",
									],
								},
							},
							"cluster_version": {
								"description": "The Kubernetes server version for the EKS cluster.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"config_map_aws_auth": {
								"description": "A kubernetes configuration to authenticate to this EKS cluster.",
								"expression": {
									"references": [
										"kubernetes_config_map.aws_auth",
									],
								},
							},
							"fargate_iam_role_arn": {
								"description": "IAM role ARN for EKS Fargate pods",
								"expression": {
									"references": [
										"module.fargate.iam_role_arn",
									],
								},
							},
							"fargate_iam_role_name": {
								"description": "IAM role name for EKS Fargate pods",
								"expression": {
									"references": [
										"module.fargate.iam_role_name",
									],
								},
							},
							"fargate_profile_arns": {
								"description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles.",
								"expression": {
									"references": [
										"module.fargate.fargate_profile_arns",
									],
								},
							},
							"fargate_profile_ids": {
								"description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:).",
								"expression": {
									"references": [
										"module.fargate.fargate_profile_ids",
									],
								},
							},
							"kubeconfig": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "kubectl config file contents for this EKS cluster. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"local.kubeconfig",
									],
								},
							},
							"kubeconfig_filename": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "The filename of the generated kubectl config. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"local_file.kubeconfig",
									],
								},
							},
							"node_groups": {
								"description": "Outputs from EKS node groups. Map of maps, keyed by var.node_groups keys",
								"expression": {
									"references": [
										"module.node_groups.node_groups",
									],
								},
							},
							"oidc_provider_arn": {
								"description": "The ARN of the OIDC Provider if `enable_irsa = true`.",
								"expression": {
									"references": [
										"var.enable_irsa",
										"aws_iam_openid_connect_provider.oidc_provider",
									],
								},
							},
							"security_group_rule_cluster_https_worker_ingress": {
								"description": "Security group rule responsible for allowing pods to communicate with the EKS cluster API.",
								"expression": {
									"references": [
										"aws_security_group_rule.cluster_https_worker_ingress",
									],
								},
							},
							"worker_iam_instance_profile_arns": {
								"description": "default IAM instance profile ARN for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_instance_profile.workers",
										"aws_iam_instance_profile.workers_launch_template",
									],
								},
							},
							"worker_iam_instance_profile_names": {
								"description": "default IAM instance profile name for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_instance_profile.workers",
										"aws_iam_instance_profile.workers_launch_template",
									],
								},
							},
							"worker_iam_role_arn": {
								"description": "default IAM role ARN for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_role.workers",
										"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
										"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
									],
								},
							},
							"worker_iam_role_name": {
								"description": "default IAM role name for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_role.workers",
										"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
										"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
									],
								},
							},
							"worker_security_group_id": {
								"description": "Security group ID attached to the EKS workers.",
								"expression": {
									"references": [
										"local.worker_security_group_id",
									],
								},
							},
							"workers_asg_arns": {
								"description": "IDs of the autoscaling groups containing workers.",
								"expression": {
									"references": [
										"aws_autoscaling_group.workers",
										"aws_autoscaling_group.workers_launch_template",
									],
								},
							},
							"workers_asg_names": {
								"description": "Names of the autoscaling groups containing workers.",
								"expression": {
									"references": [
										"aws_autoscaling_group.workers",
										"aws_autoscaling_group.workers_launch_template",
									],
								},
							},
							"workers_default_ami_id": {
								"description": "ID of the default worker group AMI",
								"expression": {
									"references": [
										"local.default_ami_id_linux",
									],
								},
							},
							"workers_default_ami_id_windows": {
								"description": "ID of the default Windows worker group AMI",
								"expression": {
									"references": [
										"local.default_ami_id_windows",
									],
								},
							},
							"workers_launch_template_arns": {
								"description": "ARNs of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_launch_template_ids": {
								"description": "IDs of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_launch_template_latest_versions": {
								"description": "Latest versions of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_user_data": {
								"description": "User data of worker groups",
								"expression": {
									"references": [
										"local.userdata_rendered",
										"local.launch_template_userdata_rendered",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_autoscaling_group.workers",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_count",
									],
								},
								"expressions": {
									"default_cooldown": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"desired_capacity": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"enabled_metrics": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"force_delete": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"health_check_grace_period": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"health_check_type": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"launch_configuration": {
										"references": [
											"aws_launch_configuration.workers",
											"count.index",
										],
									},
									"load_balancers": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"max_instance_lifetime": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"max_size": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"min_size": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
											"var.worker_groups",
											"count.index",
											"count.index",
										],
									},
									"placement_group": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"protect_from_scale_in": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"service_linked_role_arn": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"suspended_processes": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"target_group_arns": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"termination_policies": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"vpc_zone_identifier": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_autoscaling_group",
							},
							{
								"address": "aws_autoscaling_group.workers_launch_template",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"default_cooldown": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"desired_capacity": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"enabled_metrics": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"force_delete": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"health_check_grace_period": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"health_check_type": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"load_balancers": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"max_instance_lifetime": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"max_size": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"min_size": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
											"var.worker_groups_launch_template",
											"count.index",
											"count.index",
										],
									},
									"placement_group": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"protect_from_scale_in": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"service_linked_role_arn": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"suspended_processes": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"target_group_arns": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"termination_policies": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"vpc_zone_identifier": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_autoscaling_group",
							},
							{
								"address": "aws_cloudwatch_log_group.this",
								"count_expression": {
									"references": [
										"var.cluster_enabled_log_types",
										"var.create_eks",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.cluster_log_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.cluster_name",
										],
									},
									"retention_in_days": {
										"references": [
											"var.cluster_log_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_eks_cluster.this",
								"count_expression": {
									"references": [
										"var.create_eks",
									],
								},
								"depends_on": [
									"aws_security_group_rule.cluster_egress_internet",
									"aws_security_group_rule.cluster_https_worker_ingress",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
									"aws_cloudwatch_log_group.this",
								],
								"expressions": {
									"enabled_cluster_log_types": {
										"references": [
											"var.cluster_enabled_log_types",
										],
									},
									"kubernetes_network_config": [
										{
											"service_ipv4_cidr": {
												"references": [
													"var.cluster_service_ipv4_cidr",
												],
											},
										},
									],
									"name": {
										"references": [
											"var.cluster_name",
										],
									},
									"role_arn": {
										"references": [
											"local.cluster_iam_role_arn",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"timeouts": {},
									"version": {
										"references": [
											"var.cluster_version",
										],
									},
									"vpc_config": [
										{
											"endpoint_private_access": {
												"references": [
													"var.cluster_endpoint_private_access",
												],
											},
											"endpoint_public_access": {
												"references": [
													"var.cluster_endpoint_public_access",
												],
											},
											"public_access_cidrs": {
												"references": [
													"var.cluster_endpoint_public_access_cidrs",
												],
											},
											"security_group_ids": {
												"references": [
													"local.cluster_security_group_id",
												],
											},
											"subnet_ids": {
												"references": [
													"var.subnets",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_eks_cluster",
							},
							{
								"address": "aws_iam_instance_profile.workers",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"local.worker_group_count",
									],
								},
								"expressions": {
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"role": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.default_iam_role_id",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "aws_iam_instance_profile.workers_launch_template",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"role": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.default_iam_role_id",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "aws_iam_openid_connect_provider.oidc_provider",
								"count_expression": {
									"references": [
										"var.enable_irsa",
										"var.create_eks",
									],
								},
								"expressions": {
									"client_id_list": {
										"references": [
											"local.sts_principal",
										],
									},
									"tags": {
										"references": [
											"var.cluster_name",
											"var.tags",
										],
									},
									"thumbprint_list": {
										"references": [
											"var.eks_oidc_root_ca_thumbprint",
										],
									},
									"url": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "oidc_provider",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_openid_connect_provider",
							},
							{
								"address": "aws_iam_policy.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.cluster",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.cluster_assume_role_policy",
										],
									},
									"force_detach_policies": {
										"constant_value": true,
									},
									"name": {
										"references": [
											"var.cluster_iam_role_name",
											"var.cluster_iam_role_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.cluster_iam_role_name",
											"var.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role.workers",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.workers_assume_role_policy",
										],
									},
									"force_detach_policies": {
										"constant_value": true,
									},
									"name": {
										"references": [
											"var.workers_role_name",
											"var.workers_role_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.workers_role_name",
											"aws_eks_cluster.this",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSClusterPolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSServicePolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSVPCResourceControllerPolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.cluster_elb_sl_role_creation[0]",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0]",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEC2ContainerRegistryReadOnly",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0]",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEKSWorkerNodePolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.attach_worker_cni_policy",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0]",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEKS_CNI_Policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_additional_policies",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"var.workers_additional_policies",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"var.workers_additional_policies",
											"count.index",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0]",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_additional_policies",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_launch_configuration.workers",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_count",
									],
								},
								"depends_on": [
									"aws_security_group_rule.workers_egress_internet",
									"aws_security_group_rule.workers_ingress_self",
									"aws_security_group_rule.workers_ingress_cluster",
									"aws_security_group_rule.workers_ingress_cluster_kubelet",
									"aws_security_group_rule.workers_ingress_cluster_https",
									"aws_security_group_rule.workers_ingress_cluster_primary",
									"aws_security_group_rule.cluster_primary_ingress_workers",
									"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
									"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
									"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
									"aws_iam_role_policy_attachment.workers_additional_policies",
								],
								"expressions": {
									"associate_public_ip_address": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"ebs_optimized": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.ebs_optimized_not_supported",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"enable_monitoring": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"iam_instance_profile": {
										"references": [
											"aws_iam_instance_profile.workers",
											"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
											"count.index",
										],
									},
									"image_id": {
										"references": [
											"var.worker_groups",
											"count.index",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
											"local.default_ami_id_windows",
											"local.default_ami_id_linux",
										],
									},
									"instance_type": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"key_name": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"metadata_options": [
										{
											"http_endpoint": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"http_put_response_hop_limit": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"http_tokens": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
											"var.worker_groups",
											"count.index",
											"count.index",
										],
									},
									"placement_tenancy": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"root_block_device": [
										{
											"delete_on_termination": {
												"constant_value": true,
											},
											"encrypted": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"iops": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"volume_size": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"volume_type": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"security_groups": {
										"references": [
											"local.worker_security_group_id",
											"var.worker_additional_security_group_ids",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"spot_price": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"user_data_base64": {
										"references": [
											"local.userdata_rendered",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_launch_configuration",
							},
							{
								"address": "aws_launch_template.workers_launch_template",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"depends_on": [
									"aws_security_group_rule.workers_egress_internet",
									"aws_security_group_rule.workers_ingress_self",
									"aws_security_group_rule.workers_ingress_cluster",
									"aws_security_group_rule.workers_ingress_cluster_kubelet",
									"aws_security_group_rule.workers_ingress_cluster_https",
									"aws_security_group_rule.workers_ingress_cluster_primary",
									"aws_security_group_rule.cluster_primary_ingress_workers",
									"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
									"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
									"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
									"aws_iam_role_policy_attachment.workers_additional_policies",
								],
								"expressions": {
									"block_device_mappings": [
										{
											"device_name": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"ebs": [
												{
													"delete_on_termination": {
														"constant_value": true,
													},
													"encrypted": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
													"iops": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
													"kms_key_id": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
													"throughput": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
													"volume_size": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
													"volume_type": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults",
														],
													},
												},
											],
										},
									],
									"ebs_optimized": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.ebs_optimized_not_supported",
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"enclave_options": [
										{
											"enabled": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"iam_instance_profile": [
										{
											"name": {
												"references": [
													"aws_iam_instance_profile.workers_launch_template",
													"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
													"count.index",
												],
											},
										},
									],
									"image_id": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
											"local.default_ami_id_windows",
											"local.default_ami_id_linux",
										],
									},
									"instance_type": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"key_name": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"metadata_options": [
										{
											"http_endpoint": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"http_put_response_hop_limit": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"http_tokens": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"monitoring": [
										{
											"enabled": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"name_prefix": {
										"references": [
											"aws_eks_cluster.this",
											"var.worker_groups_launch_template",
											"count.index",
											"count.index",
										],
									},
									"network_interfaces": [
										{
											"associate_public_ip_address": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"delete_on_termination": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
											"security_groups": {
												"references": [
													"local.worker_security_group_id",
													"var.worker_additional_security_group_ids",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"tag_specifications": [
										{
											"resource_type": {
												"constant_value": "volume",
											},
											"tags": {
												"references": [
													"aws_eks_cluster.this",
													"var.worker_groups_launch_template",
													"count.index",
													"count.index",
													"var.tags",
												],
											},
										},
										{
											"resource_type": {
												"constant_value": "instance",
											},
											"tags": {
												"references": [
													"aws_eks_cluster.this",
													"var.worker_groups_launch_template",
													"count.index",
													"count.index",
													"var.tags",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"update_default_version": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
									"user_data": {
										"references": [
											"local.launch_template_userdata_rendered",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_launch_template",
							},
							{
								"address": "aws_security_group.cluster",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "EKS cluster security group.",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.cluster_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.workers",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Security group for all nodes in the cluster.",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.cluster_name",
											"var.cluster_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group_rule.cluster_egress_internet",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"cidr_blocks": {
										"references": [
											"var.cluster_egress_cidrs",
										],
									},
									"description": {
										"constant_value": "Allow cluster egress access to the Internet.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 0,
									},
									"type": {
										"constant_value": "egress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_egress_internet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_https_worker_ingress",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods to communicate with the EKS cluster API.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_https_worker_ingress",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_primary_ingress_workers",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.worker_create_cluster_primary_security_group_rules",
										"var.cluster_version",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running on workers to send communication to cluster primary security group (e.g. Fargate pods).",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "all",
									},
									"security_group_id": {
										"references": [
											"local.cluster_primary_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_primary_ingress_workers",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_private_access",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.cluster_create_endpoint_private_access_sg_rule",
										"var.cluster_endpoint_private_access",
									],
								},
								"expressions": {
									"cidr_blocks": {
										"references": [
											"var.cluster_endpoint_private_access_cidrs",
										],
									},
									"description": {
										"constant_value": "Allow private K8S API ingress from custom source.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"aws_eks_cluster.this[0]",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_private_access",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_egress_internet",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"cidr_blocks": {
										"references": [
											"var.workers_egress_cidrs",
										],
									},
									"description": {
										"constant_value": "Allow nodes all egress to the Internet.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 0,
									},
									"type": {
										"constant_value": "egress",
									},
								},
								"mode":                "managed",
								"name":                "workers_egress_internet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow workers pods to receive communication from the cluster control plane.",
									},
									"from_port": {
										"references": [
											"var.worker_sg_ingress_from_port",
										],
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_https",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_https",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_kubelet",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
										"var.worker_sg_ingress_from_port",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow workers Kubelets to receive communication from the cluster control plane.",
									},
									"from_port": {
										"constant_value": 10250,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 10250,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_kubelet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_primary",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.worker_create_cluster_primary_security_group_rules",
										"var.cluster_version",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running on workers to receive communication from cluster primary security group (e.g. Fargate pods).",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "all",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_primary_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_primary",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_self",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow node to communicate with each other.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_self",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "kubernetes_config_map.aws_auth",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.manage_aws_auth",
									],
								},
								"depends_on": [
									"data.http.wait_for_cluster[0]",
								],
								"expressions": {
									"data": {
										"references": [
											"local.configmap_roles",
											"var.map_roles",
											"var.map_users",
											"var.map_accounts",
										],
									},
									"metadata": [
										{
											"labels": {
												"references": [
													"var.aws_auth_additional_labels",
												],
											},
											"name": {
												"constant_value": "aws-auth",
											},
											"namespace": {
												"constant_value": "kube-system",
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "aws_auth",
								"provider_config_key": "eks:kubernetes",
								"schema_version":      0,
								"type":                "kubernetes_config_map",
							},
							{
								"address": "local_file.kubeconfig",
								"count_expression": {
									"references": [
										"var.write_kubeconfig",
										"var.create_eks",
									],
								},
								"expressions": {
									"content": {
										"references": [
											"local.kubeconfig",
										],
									},
									"directory_permission": {
										"constant_value": "0755",
									},
									"file_permission": {
										"constant_value": "0644",
									},
									"filename": {
										"references": [
											"var.config_output_path",
											"var.config_output_path",
											"var.cluster_name",
											"var.config_output_path",
										],
									},
								},
								"mode":                "managed",
								"name":                "kubeconfig",
								"provider_config_key": "eks:local",
								"schema_version":      0,
								"type":                "local_file",
							},
							{
								"address": "data.aws_ami.eks_worker",
								"count_expression": {
									"references": [
										"local.worker_has_linux_ami",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"references": [
													"local.worker_ami_name_filter",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"references": [
											"var.worker_ami_owner_id",
										],
									},
								},
								"mode":                "data",
								"name":                "eks_worker",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
							{
								"address": "data.aws_ami.eks_worker_windows",
								"count_expression": {
									"references": [
										"local.worker_has_windows_ami",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"references": [
													"local.worker_ami_name_filter_windows",
												],
											},
										},
										{
											"name": {
												"constant_value": "platform",
											},
											"values": {
												"constant_value": [
													"windows",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"references": [
											"var.worker_ami_owner_id_windows",
										],
									},
								},
								"mode":                "data",
								"name":                "eks_worker_windows",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
							{
								"address":             "data.aws_caller_identity.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_caller_identity",
							},
							{
								"address": "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"local.worker_group_count",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_worker_group_iam_instance_profile",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_worker_group_launch_template_iam_instance_profile",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "data.aws_iam_policy_document.cluster_assume_role_policy",
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"eks.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "EKSClusterAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "cluster_assume_role_policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"ec2:DescribeAccountAttributes",
													"ec2:DescribeInternetGateways",
													"ec2:DescribeAddresses",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
										},
									],
								},
								"mode":                "data",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.workers_assume_role_policy",
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"principals": [
												{
													"identifiers": {
														"references": [
															"local.ec2_principal",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "EKSWorkerAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "workers_assume_role_policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_role.custom_cluster_iam_role",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.cluster_iam_role_name",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_cluster_iam_role",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address":             "data.aws_partition.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_partition",
							},
							{
								"address": "data.http.wait_for_cluster",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.manage_aws_auth",
									],
								},
								"expressions": {
									"ca_certificate": {
										"references": [
											"aws_eks_cluster.this",
										],
									},
									"timeout": {
										"constant_value": 300,
									},
									"url": {
										"references": [
											"aws_eks_cluster.this[0]",
										],
									},
								},
								"mode":                "data",
								"name":                "wait_for_cluster",
								"provider_config_key": "eks:http",
								"schema_version":      0,
								"type":                "http",
							},
						],
						"variables": {
							"attach_worker_cni_policy": {
								"default":     true,
								"description": "Whether to attach the Amazon managed `AmazonEKS_CNI_Policy` IAM policy to the default worker IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster.",
							},
							"aws_auth_additional_labels": {
								"default":     {},
								"description": "Additional kubernetes labels applied on aws-auth ConfigMap",
							},
							"cluster_create_endpoint_private_access_sg_rule": {
								"default":     false,
								"description": "Whether to create security group rules for the access to the Amazon EKS private API server endpoint.",
							},
							"cluster_create_security_group": {
								"default":     true,
								"description": "Whether to create a security group for the cluster or attach the cluster to `cluster_security_group_id`.",
							},
							"cluster_create_timeout": {
								"default":     "30m",
								"description": "Timeout value when creating the EKS cluster.",
							},
							"cluster_delete_timeout": {
								"default":     "15m",
								"description": "Timeout value when deleting the EKS cluster.",
							},
							"cluster_egress_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks that are permitted for cluster egress traffic.",
							},
							"cluster_enabled_log_types": {
								"default":     [],
								"description": "A list of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)",
							},
							"cluster_encryption_config": {
								"default":     [],
								"description": "Configuration block with encryption configuration for the cluster. See examples/secrets_encryption/main.tf for example format",
							},
							"cluster_endpoint_private_access": {
								"default":     false,
								"description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled.",
							},
							"cluster_endpoint_private_access_cidrs": {
								"description": "List of CIDR blocks which can access the Amazon EKS private API server endpoint.",
							},
							"cluster_endpoint_public_access": {
								"default":     true,
								"description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled.",
							},
							"cluster_endpoint_public_access_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint.",
							},
							"cluster_iam_role_name": {
								"default":     "",
								"description": "IAM role name for the cluster. If manage_cluster_iam_resources is set to false, set this to reuse an existing IAM role. If manage_cluster_iam_resources is set to true, set this to force the created role name.",
							},
							"cluster_log_kms_key_id": {
								"default":     "",
								"description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)",
							},
							"cluster_log_retention_in_days": {
								"default":     90,
								"description": "Number of days to retain log events. Default retention - 90 days.",
							},
							"cluster_name": {
								"description": "Name of the EKS cluster. Also used as a prefix in names of related resources.",
							},
							"cluster_security_group_id": {
								"default":     "",
								"description": "If provided, the EKS cluster will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the workers",
							},
							"cluster_service_ipv4_cidr": {
								"description": "service ipv4 cidr for the kubernetes cluster",
							},
							"cluster_version": {
								"description": "Kubernetes version to use for the EKS cluster.",
							},
							"config_output_path": {
								"default":     "./",
								"description": "Where to save the Kubectl config file (if `write_kubeconfig = true`). Assumed to be a directory if the value ends with a forward slash `/`.",
							},
							"create_eks": {
								"default":     true,
								"description": "Controls if EKS resources should be created (it affects almost all resources)",
							},
							"create_fargate_pod_execution_role": {
								"default":     true,
								"description": "Controls if the EKS Fargate pod execution IAM role should be created.",
							},
							"eks_oidc_root_ca_thumbprint": {
								"default":     "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
								"description": "Thumbprint of Root CA for EKS OIDC, Valid until 2037",
							},
							"enable_irsa": {
								"default":     false,
								"description": "Whether to create OpenID Connect Provider for EKS to enable IRSA",
							},
							"fargate_pod_execution_role_name": {
								"description": "The IAM Role that provides permissions for the EKS Fargate Profile.",
							},
							"fargate_profiles": {
								"default":     {},
								"description": "Fargate profiles to create. See `fargate_profile` keys section in fargate submodule's README.md for more details",
							},
							"iam_path": {
								"default":     "/",
								"description": "If provided, all IAM roles will be created on this path.",
							},
							"kubeconfig_aws_authenticator_additional_args": {
								"default":     [],
								"description": "Any additional arguments to pass to the authenticator such as the role to assume. e.g. [\"-r\", \"MyEksRole\"].",
							},
							"kubeconfig_aws_authenticator_command": {
								"default":     "aws-iam-authenticator",
								"description": "Command to use to fetch AWS EKS credentials.",
							},
							"kubeconfig_aws_authenticator_command_args": {
								"default":     [],
								"description": "Default arguments passed to the authenticator command. Defaults to [token -i $cluster_name].",
							},
							"kubeconfig_aws_authenticator_env_variables": {
								"default":     {},
								"description": "Environment variables that should be used when executing the authenticator. e.g. { AWS_PROFILE = \"eks\"}.",
							},
							"kubeconfig_name": {
								"default":     "",
								"description": "Override the default name used for items kubeconfig.",
							},
							"manage_aws_auth": {
								"default":     true,
								"description": "Whether to apply the aws-auth configmap file.",
							},
							"manage_cluster_iam_resources": {
								"default":     true,
								"description": "Whether to let the module manage cluster IAM resources. If set to false, cluster_iam_role_name must be specified.",
							},
							"manage_worker_iam_resources": {
								"default":     true,
								"description": "Whether to let the module manage worker IAM resources. If set to false, iam_instance_profile_name must be specified for workers.",
							},
							"map_accounts": {
								"default":     [],
								"description": "Additional AWS account numbers to add to the aws-auth configmap. See examples/basic/variables.tf for example format.",
							},
							"map_roles": {
								"default":     [],
								"description": "Additional IAM roles to add to the aws-auth configmap. See examples/basic/variables.tf for example format.",
							},
							"map_users": {
								"default":     [],
								"description": "Additional IAM users to add to the aws-auth configmap. See examples/basic/variables.tf for example format.",
							},
							"node_groups": {
								"default":     {},
								"description": "Map of map of node groups to create. See `node_groups` module's documentation for more details",
							},
							"node_groups_defaults": {
								"default":     {},
								"description": "Map of values to be applied to all node groups. See `node_groups` module's documentation for more details",
							},
							"permissions_boundary": {
								"description": "If provided, all IAM roles will be created with this permissions boundary attached.",
							},
							"subnets": {
								"description": "A list of subnets to place the EKS cluster and workers within.",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources. Tags added to launch configuration or templates override these values for ASG Tags only.",
							},
							"vpc_id": {
								"description": "VPC where the cluster and workers will be deployed.",
							},
							"worker_additional_security_group_ids": {
								"default":     [],
								"description": "A list of additional security group ids to attach to worker instances",
							},
							"worker_ami_name_filter": {
								"default":     "",
								"description": "Name filter for AWS EKS worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.",
							},
							"worker_ami_name_filter_windows": {
								"default":     "",
								"description": "Name filter for AWS EKS Windows worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.",
							},
							"worker_ami_owner_id": {
								"default":     "amazon",
								"description": "The ID of the owner for the AMI to use for the AWS EKS workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').",
							},
							"worker_ami_owner_id_windows": {
								"default":     "amazon",
								"description": "The ID of the owner for the AMI to use for the AWS EKS Windows workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').",
							},
							"worker_create_cluster_primary_security_group_rules": {
								"default":     false,
								"description": "Whether to create security group rules to allow communication between pods on workers and pods using the primary cluster security group.",
							},
							"worker_create_initial_lifecycle_hooks": {
								"default":     false,
								"description": "Whether to create initial lifecycle hooks provided in worker groups.",
							},
							"worker_create_security_group": {
								"default":     true,
								"description": "Whether to create a security group for the workers or attach the workers to `worker_security_group_id`.",
							},
							"worker_groups": {
								"default":     [],
								"description": "A list of maps defining worker group configurations to be defined using AWS Launch Configurations. See workers_group_defaults for valid keys.",
							},
							"worker_groups_launch_template": {
								"default":     [],
								"description": "A list of maps defining worker group configurations to be defined using AWS Launch Templates. See workers_group_defaults for valid keys.",
							},
							"worker_security_group_id": {
								"default":     "",
								"description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster.",
							},
							"worker_sg_ingress_from_port": {
								"default":     1025,
								"description": "Minimum port number from which pods will accept communication. Must be changed to a lower value if some pods in your cluster will expose a port lower than 1025 (e.g. 22, 80, or 443).",
							},
							"workers_additional_policies": {
								"default":     [],
								"description": "Additional policies to be added to workers",
							},
							"workers_egress_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks that are permitted for workers egress traffic.",
							},
							"workers_group_defaults": {
								"default":     {},
								"description": "Override default values for target groups. See workers_group_defaults_defaults in local.tf for valid keys.",
							},
							"workers_role_name": {
								"default":     "",
								"description": "User defined workers role name.",
							},
							"write_kubeconfig": {
								"default":     true,
								"description": "Whether to write a Kubectl config file containing the cluster configuration. Saved to `config_output_path`.",
							},
						},
					},
					"source": "terraform-aws-modules/eks/aws",
				},
			},
			"resources": [
				{
					"address": "random_string.suffix",
					"expressions": {
						"length": {
							"constant_value": 8,
						},
						"special": {
							"constant_value": false,
						},
					},
					"mode":                "managed",
					"name":                "suffix",
					"provider_config_key": "random",
					"schema_version":      1,
					"type":                "random_string",
				},
				{
					"address":             "data.aws_availability_zones.available",
					"mode":                "data",
					"name":                "available",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_availability_zones",
				},
				{
					"address": "data.aws_eks_cluster.cluster",
					"expressions": {
						"name": {
							"references": [
								"module.eks.cluster_id",
							],
						},
					},
					"mode":                "data",
					"name":                "cluster",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_eks_cluster",
				},
				{
					"address": "data.aws_eks_cluster_auth.cluster",
					"expressions": {
						"name": {
							"references": [
								"module.eks.cluster_id",
							],
						},
					},
					"mode":                "data",
					"name":                "cluster",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_eks_cluster_auth",
				},
				{
					"address": "data.terraform_remote_state.core-services",
					"expressions": {
						"backend": {
							"constant_value": "remote",
						},
						"config": {
							"constant_value": {
								"organization": "digitech",
								"workspaces": {
									"name": "tf-core-services",
								},
							},
						},
					},
					"mode":                "data",
					"name":                "core-services",
					"provider_config_key": "terraform",
					"schema_version":      0,
					"type":                "terraform_remote_state",
				},
			],
			"variables": {
				"region": {
					"default":     "eu-west-1",
					"description": "AWS Deployment region..",
				},
			},
		},
	},
	"format_version": "0.1",
	"planned_values": {
		"root_module": {
			"child_modules": [
				{
					"address": "module.eks",
					"resources": [
						{
							"address":        "module.eks.aws_autoscaling_group.workers_launch_template[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_launch_template",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_autoscaling_group",
							"values": {
								"capacity_rebalance":        null,
								"desired_capacity":          1,
								"enabled_metrics":           null,
								"force_delete":              false,
								"force_delete_warm_pool":    false,
								"health_check_grace_period": 300,
								"initial_lifecycle_hook":    [],
								"instance_refresh":          [],
								"launch_configuration":      null,
								"launch_template": [
									{},
								],
								"load_balancers":         null,
								"max_instance_lifetime":  0,
								"max_size":               5,
								"metrics_granularity":    "1Minute",
								"min_elb_capacity":       null,
								"min_size":               1,
								"mixed_instances_policy": [],
								"name_prefix":            "eks19-spot-1",
								"placement_group":        null,
								"protect_from_scale_in":  false,
								"suspended_processes": [
									"AZRebalance",
								],
								"tag": [
									{
										"key": "Name",
										"propagate_at_launch": true,
										"value":               "eks19-spot-1-eks_asg",
									},
									{
										"key": "kubernetes.io/cluster/eks19",
										"propagate_at_launch": true,
										"value":               "owned",
									},
								],
								"tags":                 null,
								"target_group_arns":    null,
								"termination_policies": [],
								"timeouts":             null,
								"vpc_zone_identifier": [
									"subnet-02ccd72ff4cfbc5c2",
									"subnet-0c5a777b65503fed4",
								],
								"wait_for_capacity_timeout": "10m",
								"wait_for_elb_capacity":     null,
								"warm_pool":                 [],
							},
						},
						{
							"address":        "module.eks.aws_eks_cluster.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_eks_cluster",
							"values": {
								"enabled_cluster_log_types": null,
								"encryption_config":         [],
								"kubernetes_network_config": [
									{},
								],
								"name": "eks19",
								"tags": null,
								"timeouts": {
									"create": "30m",
									"delete": "15m",
									"update": null,
								},
								"version": "1.19",
								"vpc_config": [
									{
										"endpoint_private_access": true,
										"endpoint_public_access":  false,
										"public_access_cidrs": [
											"0.0.0.0/0",
										],
										"subnet_ids": [
											"subnet-02ccd72ff4cfbc5c2",
											"subnet-0c5a777b65503fed4",
										],
									},
								],
							},
						},
						{
							"address":        "module.eks.aws_iam_instance_profile.workers_launch_template[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_launch_template",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_instance_profile",
							"values": {
								"name_prefix": "eks19",
								"path":        "/",
								"tags":        null,
							},
						},
						{
							"address":        "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_elb_sl_role_creation",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
								"name_prefix": "eks19-elb-sl-role-creation",
								"path":        "/",
								"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
								"tags":        null,
							},
						},
						{
							"address":        "module.eks.aws_iam_role.cluster[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role",
							"values": {
								"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
								"description":           null,
								"force_detach_policies": true,
								"max_session_duration":  3600,
								"name_prefix":           "eks19",
								"path":                  "/",
								"permissions_boundary":  null,
								"tags":                  null,
							},
						},
						{
							"address":        "module.eks.aws_iam_role.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role",
							"values": {
								"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
								"description":           null,
								"force_detach_policies": true,
								"max_session_duration":  3600,
								"name_prefix":           "eks19",
								"path":                  "/",
								"permissions_boundary":  null,
								"tags":                  null,
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_AmazonEKSClusterPolicy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_AmazonEKSServicePolicy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_elb_sl_role_creation",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_AmazonEKSWorkerNodePolicy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
							},
						},
						{
							"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_AmazonEKS_CNI_Policy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
							},
						},
						{
							"address":        "module.eks.aws_launch_template.workers_launch_template[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_launch_template",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_launch_template",
							"values": {
								"block_device_mappings": [
									{
										"device_name": "/dev/xvda",
										"ebs": [
											{
												"delete_on_termination": "true",
												"encrypted":             "false",
												"iops":                  0,
												"kms_key_id":            "",
												"snapshot_id":           null,
												"volume_size":           100,
												"volume_type":           "gp2",
											},
										],
										"no_device":    null,
										"virtual_name": null,
									},
								],
								"capacity_reservation_specification": [],
								"cpu_options":                        [],
								"credit_specification": [
									{
										"cpu_credits": "standard",
									},
								],
								"description":                   null,
								"disable_api_termination":       null,
								"ebs_optimized":                 "false",
								"elastic_gpu_specifications":    [],
								"elastic_inference_accelerator": [],
								"enclave_options": [
									{
										"enabled": false,
									},
								],
								"hibernation_options": [],
								"iam_instance_profile": [
									{
										"arn": null,
									},
								],
								"image_id":                             "ami-07ce84a9fa14b4c70",
								"instance_initiated_shutdown_behavior": null,
								"instance_market_options":              [],
								"instance_type":                        "t2.nano",
								"kernel_id":                            null,
								"key_name":                             "",
								"license_specification":                [],
								"metadata_options": [
									{
										"http_endpoint": "enabled",
										"http_tokens":   "optional",
									},
								],
								"monitoring": [
									{
										"enabled": true,
									},
								],
								"name_prefix": "eks19-spot-1",
								"network_interfaces": [
									{
										"associate_carrier_ip_address": null,
										"associate_public_ip_address":  "false",
										"delete_on_termination":        "true",
										"description":                  null,
										"device_index":                 null,
										"interface_type":               null,
										"ipv4_address_count":           null,
										"ipv4_addresses":               null,
										"ipv6_address_count":           null,
										"ipv6_addresses":               null,
										"network_interface_id":         null,
										"private_ip_address":           null,
										"subnet_id":                    null,
									},
								],
								"placement":            [],
								"ram_disk_id":          null,
								"security_group_names": null,
								"tag_specifications": [
									{
										"resource_type": "volume",
										"tags": {
											"Name": "eks19-spot-1-eks_asg",
										},
									},
									{
										"resource_type": "instance",
										"tags": {
											"Name": "eks19-spot-1-eks_asg",
										},
									},
								],
								"tags": null,
								"update_default_version": false,
								"vpc_security_group_ids": null,
							},
						},
						{
							"address":        "module.eks.aws_security_group.cluster[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description":            "EKS cluster security group.",
								"name_prefix":            "eks19",
								"revoke_rules_on_delete": false,
								"tags": {
									"Name": "eks19-eks_cluster_sg",
								},
								"tags_all": {
									"Name": "eks19-eks_cluster_sg",
								},
								"timeouts": null,
								"vpc_id":   "vpc-07411ed4bd38a4261",
							},
						},
						{
							"address":        "module.eks.aws_security_group.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description":            "Security group for all nodes in the cluster.",
								"name_prefix":            "eks19",
								"revoke_rules_on_delete": false,
								"tags": {
									"Name": "eks19-eks_worker_sg",
									"kubernetes.io/cluster/eks19": "owned",
								},
								"tags_all": {
									"Name": "eks19-eks_worker_sg",
									"kubernetes.io/cluster/eks19": "owned",
								},
								"timeouts": null,
								"vpc_id":   "vpc-07411ed4bd38a4261",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_egress_internet",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "Allow cluster egress access to the Internet.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          0,
								"type":             "egress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_https_worker_ingress",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow pods to communicate with the EKS cluster API.",
								"from_port":        443,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          443,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.workers_egress_internet[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_egress_internet",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "Allow nodes all egress to the Internet.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          0,
								"type":             "egress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_ingress_cluster",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow workers pods to receive communication from the cluster control plane.",
								"from_port":        1025,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          65535,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_ingress_cluster_https",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
								"from_port":        443,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          443,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.workers_ingress_self[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_ingress_self",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"type":           "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow node to communicate with each other.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          65535,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.data.http.wait_for_cluster[0]",
							"index":          0,
							"mode":           "data",
							"name":           "wait_for_cluster",
							"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
							"schema_version": 0,
							"type":           "http",
							"values": {
								"insecure":        null,
								"request_headers": null,
								"timeout":         300,
							},
						},
						{
							"address":        "module.eks.kubernetes_config_map.aws_auth[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "aws_auth",
							"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
							"schema_version": 0,
							"type":           "kubernetes_config_map",
							"values": {
								"binary_data": null,
								"metadata": [
									{
										"annotations":   null,
										"generate_name": null,
										"labels": {
											"app.kubernetes.io/managed-by": "Terraform",
											"terraform.io/module":          "terraform-aws-modules.eks.aws",
										},
										"name":      "aws-auth",
										"namespace": "kube-system",
									},
								],
							},
						},
						{
							"address":        "module.eks.local_file.kubeconfig[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "kubeconfig",
							"provider_name":  "registry.terraform.io/hashicorp/local",
							"schema_version": 0,
							"type":           "local_file",
							"values": {
								"content_base64":       null,
								"directory_permission": "0755",
								"file_permission":      "0644",
								"filename":             "./kubeconfig_eks19",
								"sensitive_content":    "REDACTED_SENSITIVE",
								"source":               null,
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "data.aws_eks_cluster.cluster",
					"mode":           "data",
					"name":           "cluster",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"type":           "aws_eks_cluster",
				},
				{
					"address":        "data.aws_eks_cluster_auth.cluster",
					"mode":           "data",
					"name":           "cluster",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"type":           "aws_eks_cluster_auth",
				},
				{
					"address":        "random_string.suffix",
					"mode":           "managed",
					"name":           "suffix",
					"provider_name":  "registry.terraform.io/hashicorp/random",
					"schema_version": 1,
					"type":           "random_string",
					"values": {
						"keepers":          null,
						"length":           8,
						"lower":            true,
						"min_lower":        0,
						"min_numeric":      0,
						"min_special":      0,
						"min_upper":        0,
						"number":           true,
						"override_special": null,
						"special":          false,
						"upper":            true,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "0.1",
		"terraform_version": "0.15.3",
		"values": {
			"root_module": {
				"child_modules": [
					{
						"address": "module.eks",
						"resources": [
							{
								"address":        "module.eks.data.aws_ami.eks_worker[0]",
								"index":          0,
								"mode":           "data",
								"name":           "eks_worker",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_ami",
								"values": {
									"architecture": "x86_64",
									"arn":          "arn:aws:ec2:eu-west-1::image/ami-07ce84a9fa14b4c70",
									"block_device_mappings": [
										{
											"device_name": "/dev/xvda",
											"ebs": {
												"delete_on_termination": "true",
												"encrypted":             "false",
												"iops":                  "0",
												"snapshot_id":           "snap-064b343115f1f67ea",
												"throughput":            "0",
												"volume_size":           "20",
												"volume_type":           "gp2",
											},
											"no_device":    "",
											"virtual_name": "",
										},
									],
									"creation_date":    "2021-05-19T02:57:47.000Z",
									"description":      "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.6, docker: 19.03.13ce-1.amzn2, containerd: 1.4.1-2.amzn2)",
									"ena_support":      true,
									"executable_users": null,
									"filter": [
										{
											"name": "name",
											"values": [
												"amazon-eks-node-1.19-v*",
											],
										},
									],
									"hypervisor":        "xen",
									"id":                "ami-07ce84a9fa14b4c70",
									"image_id":          "ami-07ce84a9fa14b4c70",
									"image_location":    "amazon/amazon-eks-node-1.19-v20210518",
									"image_owner_alias": "amazon",
									"image_type":        "machine",
									"kernel_id":         null,
									"most_recent":       true,
									"name":              "amazon-eks-node-1.19-v20210518",
									"name_regex":        null,
									"owner_id":          "602401143452",
									"owners": [
										"amazon",
									],
									"platform":          null,
									"platform_details":  "Linux/UNIX",
									"product_codes":     [],
									"public":            true,
									"ramdisk_id":        null,
									"root_device_name":  "/dev/xvda",
									"root_device_type":  "ebs",
									"root_snapshot_id":  "snap-064b343115f1f67ea",
									"sriov_net_support": "simple",
									"state":             "available",
									"state_reason": {
										"code":    "UNSET",
										"message": "UNSET",
									},
									"tags":                {},
									"usage_operation":     "RunInstances",
									"virtualization_type": "hvm",
								},
							},
							{
								"address":        "module.eks.data.aws_caller_identity.current",
								"mode":           "data",
								"name":           "current",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_caller_identity",
								"values": {
									"account_id": "367603068073",
									"arn":        "arn:aws:iam::367603068073:user/terraform-user",
									"id":         "367603068073",
									"user_id":    "AIDAVLFWZVSUX74JQ44WW",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
								"mode":           "data",
								"name":           "cluster_assume_role_policy",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_iam_policy_document",
								"values": {
									"id":                        "2764486067",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"sts:AssumeRole",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														"eks.amazonaws.com",
													],
													"type": "Service",
												},
											],
											"resources": [],
											"sid":       "EKSClusterAssumeRole",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
								"index":          0,
								"mode":           "data",
								"name":           "cluster_elb_sl_role_creation",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_iam_policy_document",
								"values": {
									"id":                        "3709839417",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"ec2:DescribeAccountAttributes",
												"ec2:DescribeAddresses",
												"ec2:DescribeInternetGateways",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals":     [],
											"resources": [
												"*",
											],
											"sid": "",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
								"mode":           "data",
								"name":           "workers_assume_role_policy",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_iam_policy_document",
								"values": {
									"id":                        "3778018924",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"sts:AssumeRole",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														"ec2.amazonaws.com",
													],
													"type": "Service",
												},
											],
											"resources": [],
											"sid":       "EKSWorkerAssumeRole",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_partition.current",
								"mode":           "data",
								"name":           "current",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"type":           "aws_partition",
								"values": {
									"dns_suffix":         "amazonaws.com",
									"id":                 "aws",
									"partition":          "aws",
									"reverse_dns_prefix": "com.amazonaws",
								},
							},
						],
					},
				],
				"resources": [
					{
						"address":        "data.aws_availability_zones.available",
						"mode":           "data",
						"name":           "available",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"type":           "aws_availability_zones",
						"values": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"eu-west-1",
							],
							"id": "eu-west-1",
							"names": [
								"eu-west-1a",
								"eu-west-1b",
								"eu-west-1c",
							],
							"state": null,
							"zone_ids": [
								"euw1-az2",
								"euw1-az3",
								"euw1-az1",
							],
						},
					},
					{
						"address":        "data.terraform_remote_state.core-services",
						"mode":           "data",
						"name":           "core-services",
						"provider_name":  "terraform.io/builtin/terraform",
						"schema_version": 0,
						"type":           "terraform_remote_state",
						"values": {
							"backend": "remote",
							"config": {
								"organization": "digitech",
								"workspaces": {
									"name": "tf-core-services",
								},
							},
							"defaults": null,
							"outputs": {
								"private_subnets_id": [
									"subnet-0c5a777b65503fed4",
									"subnet-02ccd72ff4cfbc5c2",
								],
								"vpc_id": "vpc-07411ed4bd38a4261",
							},
							"workspace": null,
						},
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "data.aws_eks_cluster.cluster",
			"change": {
				"actions": [
					"read",
				],
				"after": {},
				"after_sensitive": {
					"certificate_authority":     [],
					"enabled_cluster_log_types": [],
					"identity":                  [],
					"kubernetes_network_config": [],
					"tags":       {},
					"vpc_config": [],
				},
				"after_unknown": {
					"arn": true,
					"certificate_authority":     true,
					"created_at":                true,
					"enabled_cluster_log_types": true,
					"endpoint":                  true,
					"id":                        true,
					"identity":                  true,
					"kubernetes_network_config": true,
					"name":             true,
					"platform_version": true,
					"role_arn":         true,
					"status":           true,
					"tags":             true,
					"version":          true,
					"vpc_config":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "data",
			"name":          "cluster",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_eks_cluster",
		},
		{
			"address": "data.aws_eks_cluster_auth.cluster",
			"change": {
				"actions": [
					"read",
				],
				"after": {},
				"after_sensitive": {
					"token": true,
				},
				"after_unknown": {
					"id":    true,
					"name":  true,
					"token": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "data",
			"name":          "cluster",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_eks_cluster_auth",
		},
		{
			"address": "module.eks.aws_autoscaling_group.workers_launch_template[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"capacity_rebalance":        null,
					"desired_capacity":          1,
					"enabled_metrics":           null,
					"force_delete":              false,
					"force_delete_warm_pool":    false,
					"health_check_grace_period": 300,
					"initial_lifecycle_hook":    [],
					"instance_refresh":          [],
					"launch_configuration":      null,
					"launch_template": [
						{},
					],
					"load_balancers":         null,
					"max_instance_lifetime":  0,
					"max_size":               5,
					"metrics_granularity":    "1Minute",
					"min_elb_capacity":       null,
					"min_size":               1,
					"mixed_instances_policy": [],
					"name_prefix":            "eks19-spot-1",
					"placement_group":        null,
					"protect_from_scale_in":  false,
					"suspended_processes": [
						"AZRebalance",
					],
					"tag": [
						{
							"key": "Name",
							"propagate_at_launch": true,
							"value":               "eks19-spot-1-eks_asg",
						},
						{
							"key": "kubernetes.io/cluster/eks19",
							"propagate_at_launch": true,
							"value":               "owned",
						},
					],
					"tags":                 null,
					"target_group_arns":    null,
					"termination_policies": [],
					"timeouts":             null,
					"vpc_zone_identifier": [
						"subnet-02ccd72ff4cfbc5c2",
						"subnet-0c5a777b65503fed4",
					],
					"wait_for_capacity_timeout": "10m",
					"wait_for_elb_capacity":     null,
					"warm_pool":                 [],
				},
				"after_sensitive": {
					"availability_zones":     [],
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template": [
						{},
					],
					"mixed_instances_policy": [],
					"suspended_processes": [
						false,
					],
					"tag": [
						{},
						{},
					],
					"termination_policies": [],
					"vpc_zone_identifier": [
						false,
						false,
					],
					"warm_pool": [],
				},
				"after_unknown": {
					"arn":                true,
					"availability_zones": true,
					"default_cooldown":   true,
					"health_check_type":  true,
					"id":                 true,
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template": [
						{
							"id":      true,
							"name":    true,
							"version": true,
						},
					],
					"mixed_instances_policy": [],
					"name": true,
					"service_linked_role_arn": true,
					"suspended_processes": [
						false,
					],
					"tag": [
						{},
						{},
					],
					"termination_policies": [],
					"vpc_zone_identifier": [
						false,
						false,
					],
					"warm_pool": [],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_autoscaling_group",
		},
		{
			"address": "module.eks.aws_eks_cluster.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"enabled_cluster_log_types": null,
					"encryption_config":         [],
					"kubernetes_network_config": [
						{},
					],
					"name": "eks19",
					"tags": null,
					"timeouts": {
						"create": "30m",
						"delete": "15m",
						"update": null,
					},
					"version": "1.19",
					"vpc_config": [
						{
							"endpoint_private_access": true,
							"endpoint_public_access":  false,
							"public_access_cidrs": [
								"0.0.0.0/0",
							],
							"subnet_ids": [
								"subnet-02ccd72ff4cfbc5c2",
								"subnet-0c5a777b65503fed4",
							],
						},
					],
				},
				"after_sensitive": {
					"certificate_authority": [],
					"encryption_config":     [],
					"identity":              [],
					"kubernetes_network_config": [
						{},
					],
					"tags_all": {},
					"timeouts": {},
					"vpc_config": [
						{
							"public_access_cidrs": [
								false,
							],
							"security_group_ids": [],
							"subnet_ids": [
								false,
								false,
							],
						},
					],
				},
				"after_unknown": {
					"arn": true,
					"certificate_authority": true,
					"created_at":            true,
					"encryption_config":     [],
					"endpoint":              true,
					"id":                    true,
					"identity":              true,
					"kubernetes_network_config": [
						{
							"service_ipv4_cidr": true,
						},
					],
					"platform_version": true,
					"role_arn":         true,
					"status":           true,
					"tags_all":         true,
					"timeouts":         {},
					"vpc_config": [
						{
							"cluster_security_group_id": true,
							"public_access_cidrs": [
								false,
							],
							"security_group_ids": true,
							"subnet_ids": [
								false,
								false,
							],
							"vpc_id": true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_eks_cluster",
		},
		{
			"address": "module.eks.aws_iam_instance_profile.workers_launch_template[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"name_prefix": "eks19",
					"path":        "/",
					"tags":        null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"create_date": true,
					"id":          true,
					"name":        true,
					"role":        true,
					"tags_all":    true,
					"unique_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_instance_profile",
		},
		{
			"address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
					"name_prefix": "eks19-elb-sl-role-creation",
					"path":        "/",
					"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
					"tags":        null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":       true,
					"id":        true,
					"name":      true,
					"policy_id": true,
					"tags_all":  true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.eks.aws_iam_role.cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": true,
					"max_session_duration":  3600,
					"name_prefix":           "eks19",
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"tags_all":            true,
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.eks.aws_iam_role.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": true,
					"max_session_duration":  3600,
					"name_prefix":           "eks19",
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"tags_all":            true,
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSClusterPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSServicePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
			"change": {
				"actions": [
					"create",
				],
				"after":           {},
				"after_sensitive": {},
				"after_unknown": {
					"id":         true,
					"policy_arn": true,
					"role":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKSWorkerNodePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKS_CNI_Policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_launch_template.workers_launch_template[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"block_device_mappings": [
						{
							"device_name": "/dev/xvda",
							"ebs": [
								{
									"delete_on_termination": "true",
									"encrypted":             "false",
									"iops":                  0,
									"kms_key_id":            "",
									"snapshot_id":           null,
									"volume_size":           100,
									"volume_type":           "gp2",
								},
							],
							"no_device":    null,
							"virtual_name": null,
						},
					],
					"capacity_reservation_specification": [],
					"cpu_options":                        [],
					"credit_specification": [
						{
							"cpu_credits": "standard",
						},
					],
					"description":                   null,
					"disable_api_termination":       null,
					"ebs_optimized":                 "false",
					"elastic_gpu_specifications":    [],
					"elastic_inference_accelerator": [],
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"hibernation_options": [],
					"iam_instance_profile": [
						{
							"arn": null,
						},
					],
					"image_id":                             "ami-07ce84a9fa14b4c70",
					"instance_initiated_shutdown_behavior": null,
					"instance_market_options":              [],
					"instance_type":                        "t2.nano",
					"kernel_id":                            null,
					"key_name":                             "",
					"license_specification":                [],
					"metadata_options": [
						{
							"http_endpoint": "enabled",
							"http_tokens":   "optional",
						},
					],
					"monitoring": [
						{
							"enabled": true,
						},
					],
					"name_prefix": "eks19-spot-1",
					"network_interfaces": [
						{
							"associate_carrier_ip_address": null,
							"associate_public_ip_address":  "false",
							"delete_on_termination":        "true",
							"description":                  null,
							"device_index":                 null,
							"interface_type":               null,
							"ipv4_address_count":           null,
							"ipv4_addresses":               null,
							"ipv6_address_count":           null,
							"ipv6_addresses":               null,
							"network_interface_id":         null,
							"private_ip_address":           null,
							"subnet_id":                    null,
						},
					],
					"placement":            [],
					"ram_disk_id":          null,
					"security_group_names": null,
					"tag_specifications": [
						{
							"resource_type": "volume",
							"tags": {
								"Name": "eks19-spot-1-eks_asg",
							},
						},
						{
							"resource_type": "instance",
							"tags": {
								"Name": "eks19-spot-1-eks_asg",
							},
						},
					],
					"tags": null,
					"update_default_version": false,
					"vpc_security_group_ids": null,
				},
				"after_sensitive": {
					"block_device_mappings": [
						{
							"ebs": [
								{},
							],
						},
					],
					"capacity_reservation_specification": [],
					"cpu_options":                        [],
					"credit_specification": [
						{},
					],
					"elastic_gpu_specifications":    [],
					"elastic_inference_accelerator": [],
					"enclave_options": [
						{},
					],
					"hibernation_options": [],
					"iam_instance_profile": [
						{},
					],
					"instance_market_options": [],
					"license_specification":   [],
					"metadata_options": [
						{},
					],
					"monitoring": [
						{},
					],
					"network_interfaces": [
						{
							"security_groups": [],
						},
					],
					"placement": [],
					"tag_specifications": [
						{
							"tags": {},
						},
						{
							"tags": {},
						},
					],
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"block_device_mappings": [
						{
							"ebs": [
								{
									"throughput": true,
								},
							],
						},
					],
					"capacity_reservation_specification": [],
					"cpu_options":                        [],
					"credit_specification": [
						{},
					],
					"default_version":               true,
					"elastic_gpu_specifications":    [],
					"elastic_inference_accelerator": [],
					"enclave_options": [
						{},
					],
					"hibernation_options": [],
					"iam_instance_profile": [
						{
							"name": true,
						},
					],
					"id": true,
					"instance_market_options": [],
					"latest_version":          true,
					"license_specification":   [],
					"metadata_options": [
						{
							"http_put_response_hop_limit": true,
						},
					],
					"monitoring": [
						{},
					],
					"name": true,
					"network_interfaces": [
						{
							"security_groups": true,
						},
					],
					"placement": [],
					"tag_specifications": [
						{
							"tags": {},
						},
						{
							"tags": {},
						},
					],
					"tags_all":  true,
					"user_data": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_launch_template",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_launch_template",
		},
		{
			"address": "module.eks.aws_security_group.cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "EKS cluster security group.",
					"name_prefix":            "eks19",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "eks19-eks_cluster_sg",
					},
					"tags_all": {
						"Name": "eks19-eks_cluster_sg",
					},
					"timeouts": null,
					"vpc_id":   "vpc-07411ed4bd38a4261",
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"egress":   true,
					"id":       true,
					"ingress":  true,
					"name":     true,
					"owner_id": true,
					"tags":     {},
					"tags_all": {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.eks.aws_security_group.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "Security group for all nodes in the cluster.",
					"name_prefix":            "eks19",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "eks19-eks_worker_sg",
						"kubernetes.io/cluster/eks19": "owned",
					},
					"tags_all": {
						"Name": "eks19-eks_worker_sg",
						"kubernetes.io/cluster/eks19": "owned",
					},
					"timeouts": null,
					"vpc_id":   "vpc-07411ed4bd38a4261",
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"egress":   true,
					"id":       true,
					"ingress":  true,
					"name":     true,
					"owner_id": true,
					"tags":     {},
					"tags_all": {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      "Allow cluster egress access to the Internet.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow pods to communicate with the EKS cluster API.",
					"from_port":        443,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          443,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_https_worker_ingress",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      "Allow nodes all egress to the Internet.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow workers pods to receive communication from the cluster control plane.",
					"from_port":        1025,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          65535,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
					"from_port":        443,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          443,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster_https",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow node to communicate with each other.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          65535,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.data.http.wait_for_cluster[0]",
			"change": {
				"actions": [
					"read",
				],
				"after": {
					"insecure":        null,
					"request_headers": null,
					"timeout":         300,
				},
				"after_sensitive": {
					"response_headers": {},
				},
				"after_unknown": {
					"body":             true,
					"ca_certificate":   true,
					"id":               true,
					"response_headers": true,
					"url":              true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "data",
			"module_address": "module.eks",
			"name":           "wait_for_cluster",
			"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
			"type":           "http",
		},
		{
			"address": "module.eks.kubernetes_config_map.aws_auth[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"binary_data": null,
					"metadata": [
						{
							"annotations":   null,
							"generate_name": null,
							"labels": {
								"app.kubernetes.io/managed-by": "Terraform",
								"terraform.io/module":          "terraform-aws-modules.eks.aws",
							},
							"name":      "aws-auth",
							"namespace": "kube-system",
						},
					],
				},
				"after_sensitive": {
					"data": {},
					"metadata": [
						{
							"labels": {},
						},
					],
				},
				"after_unknown": {
					"data": true,
					"id":   true,
					"metadata": [
						{
							"generation":       true,
							"labels":           {},
							"resource_version": true,
							"self_link":        true,
							"uid":              true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "aws_auth",
			"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
			"type":           "kubernetes_config_map",
		},
		{
			"address": "module.eks.local_file.kubeconfig[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"content_base64":       null,
					"directory_permission": "0755",
					"file_permission":      "0644",
					"filename":             "./kubeconfig_eks19",
					"sensitive_content":    "REDACTED_SENSITIVE",
					"source":               null,
				},
				"after_sensitive": {
					"sensitive_content": true,
				},
				"after_unknown": {
					"content": true,
					"id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "kubeconfig",
			"provider_name":  "registry.terraform.io/hashicorp/local",
			"type":           "local_file",
		},
		{
			"address": "random_string.suffix",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"keepers":          null,
					"length":           8,
					"lower":            true,
					"min_lower":        0,
					"min_numeric":      0,
					"min_special":      0,
					"min_upper":        0,
					"number":           true,
					"override_special": null,
					"special":          false,
					"upper":            true,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":     true,
					"result": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "suffix",
			"provider_name": "registry.terraform.io/hashicorp/random",
			"type":          "random_string",
		},
	],
	"terraform_version": "0.15.3",
	"variables": {
		"region": {
			"value": "eu-west-1",
		},
	},
}
