import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {
			"aws_availability_zones": {
				"available": {
					0: {
						"attr": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"eu-west-1",
							],
							"id": "eu-west-1",
							"names": [
								"eu-west-1a",
								"eu-west-1b",
								"eu-west-1c",
							],
							"state": null,
							"zone_ids": [
								"euw1-az2",
								"euw1-az3",
								"euw1-az1",
							],
						},
						"depends_on": [],
						"id":         "eu-west-1",
						"tainted":    false,
					},
				},
			},
			"terraform_remote_state": {
				"core-services": {
					0: {
						"attr": {
							"backend": "remote",
							"config": {
								"organization": "digitech",
								"workspaces": {
									"name": "tf-core-services",
								},
							},
							"defaults": null,
							"outputs": {
								"private_subnets_id": [
									"subnet-0c5a777b65503fed4",
									"subnet-02ccd72ff4cfbc5c2",
								],
								"vpc_id": "vpc-07411ed4bd38a4261",
							},
							"workspace": null,
						},
						"depends_on": [],
						"id":         "",
						"tainted":    false,
					},
				},
			},
		},
		"path":      [],
		"resources": {},
	},

	"module.eks": {
		"data": {
			"aws_ami": {
				"eks_worker": {
					0: {
						"attr": {
							"architecture": "x86_64",
							"arn":          "arn:aws:ec2:eu-west-1::image/ami-07ce84a9fa14b4c70",
							"block_device_mappings": [
								{
									"device_name": "/dev/xvda",
									"ebs": {
										"delete_on_termination": "true",
										"encrypted":             "false",
										"iops":                  "0",
										"snapshot_id":           "snap-064b343115f1f67ea",
										"throughput":            "0",
										"volume_size":           "20",
										"volume_type":           "gp2",
									},
									"no_device":    "",
									"virtual_name": "",
								},
							],
							"creation_date":    "2021-05-19T02:57:47.000Z",
							"description":      "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.6, docker: 19.03.13ce-1.amzn2, containerd: 1.4.1-2.amzn2)",
							"ena_support":      true,
							"executable_users": null,
							"filter": [
								{
									"name": "name",
									"values": [
										"amazon-eks-node-1.19-v*",
									],
								},
							],
							"hypervisor":        "xen",
							"id":                "ami-07ce84a9fa14b4c70",
							"image_id":          "ami-07ce84a9fa14b4c70",
							"image_location":    "amazon/amazon-eks-node-1.19-v20210518",
							"image_owner_alias": "amazon",
							"image_type":        "machine",
							"kernel_id":         null,
							"most_recent":       true,
							"name":              "amazon-eks-node-1.19-v20210518",
							"name_regex":        null,
							"owner_id":          "602401143452",
							"owners": [
								"amazon",
							],
							"platform":          null,
							"platform_details":  "Linux/UNIX",
							"product_codes":     [],
							"public":            true,
							"ramdisk_id":        null,
							"root_device_name":  "/dev/xvda",
							"root_device_type":  "ebs",
							"root_snapshot_id":  "snap-064b343115f1f67ea",
							"sriov_net_support": "simple",
							"state":             "available",
							"state_reason": {
								"code":    "UNSET",
								"message": "UNSET",
							},
							"tags":                {},
							"usage_operation":     "RunInstances",
							"virtualization_type": "hvm",
						},
						"depends_on": [],
						"id":         "ami-07ce84a9fa14b4c70",
						"tainted":    false,
					},
				},
			},
			"aws_caller_identity": {
				"current": {
					0: {
						"attr": {
							"account_id": "367603068073",
							"arn":        "arn:aws:iam::367603068073:user/terraform-user",
							"id":         "367603068073",
							"user_id":    "AIDAVLFWZVSUX74JQ44WW",
						},
						"depends_on": [],
						"id":         "367603068073",
						"tainted":    false,
					},
				},
			},
			"aws_iam_policy_document": {
				"cluster_assume_role_policy": {
					0: {
						"attr": {
							"id":                        "2764486067",
							"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
							"override_json":             null,
							"override_policy_documents": null,
							"policy_id":                 null,
							"source_json":               null,
							"source_policy_documents":   null,
							"statement": [
								{
									"actions": [
										"sts:AssumeRole",
									],
									"condition":      [],
									"effect":         "Allow",
									"not_actions":    [],
									"not_principals": [],
									"not_resources":  [],
									"principals": [
										{
											"identifiers": [
												"eks.amazonaws.com",
											],
											"type": "Service",
										},
									],
									"resources": [],
									"sid":       "EKSClusterAssumeRole",
								},
							],
							"version": "2012-10-17",
						},
						"depends_on": [],
						"id":         "2764486067",
						"tainted":    false,
					},
				},
				"cluster_elb_sl_role_creation": {
					0: {
						"attr": {
							"id":                        "3709839417",
							"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
							"override_json":             null,
							"override_policy_documents": null,
							"policy_id":                 null,
							"source_json":               null,
							"source_policy_documents":   null,
							"statement": [
								{
									"actions": [
										"ec2:DescribeAccountAttributes",
										"ec2:DescribeAddresses",
										"ec2:DescribeInternetGateways",
									],
									"condition":      [],
									"effect":         "Allow",
									"not_actions":    [],
									"not_principals": [],
									"not_resources":  [],
									"principals":     [],
									"resources": [
										"*",
									],
									"sid": "",
								},
							],
							"version": "2012-10-17",
						},
						"depends_on": [],
						"id":         "3709839417",
						"tainted":    false,
					},
				},
				"workers_assume_role_policy": {
					0: {
						"attr": {
							"id":                        "3778018924",
							"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
							"override_json":             null,
							"override_policy_documents": null,
							"policy_id":                 null,
							"source_json":               null,
							"source_policy_documents":   null,
							"statement": [
								{
									"actions": [
										"sts:AssumeRole",
									],
									"condition":      [],
									"effect":         "Allow",
									"not_actions":    [],
									"not_principals": [],
									"not_resources":  [],
									"principals": [
										{
											"identifiers": [
												"ec2.amazonaws.com",
											],
											"type": "Service",
										},
									],
									"resources": [],
									"sid":       "EKSWorkerAssumeRole",
								},
							],
							"version": "2012-10-17",
						},
						"depends_on": [],
						"id":         "3778018924",
						"tainted":    false,
					},
				},
			},
			"aws_partition": {
				"current": {
					0: {
						"attr": {
							"dns_suffix":         "amazonaws.com",
							"id":                 "aws",
							"partition":          "aws",
							"reverse_dns_prefix": "com.amazonaws",
						},
						"depends_on": [],
						"id":         "aws",
						"tainted":    false,
					},
				},
			},
		},
		"path": [
			"eks",
		],
		"resources": {},
	},
}

module_paths = [
	[],
	[
		"eks",
	],
]

terraform_version = "0.15.3"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
